- hosts: localhost
  connection: local
  become: yes
  gather_facts: yes
  vars:
  - install_teensy: no
  - dotfiles:
    - path: "{{ ansible_env.HOME }}/.config/i3/config"
      src: themes/default/i3.config
    - path: "{{ ansible_env.HOME }}/.config/polybar/config"
      src: themes/default/polybar.config
    - path: "{{ ansible_env.HOME }}/.config/nvim"
      src: nvim
    - path: "{{ ansible_env.HOME }}/.Xresources"
      src: .Xresources
    - path: "{{ ansible_env.HOME }}/.Xresources.d"
      src: themes/default
    - path: "{{ ansible_env.HOME }}/.bashrc"
      src: .bashrc
    - path: "{{ ansible_env.HOME }}/.bash_profile"
      src: .bash_profile
    - path: "{{ ansible_env.HOME }}/.exports"
      src: .exports
    - path: "{{ ansible_env.HOME }}/.config/user-dirs.dirs"
      src: user-dirs.dirs
    - path: /etc/udev/rules.d/49-teensy.rules
      src: ergodox/49-teensy.rules
  - base_packages:
    - neovim
    - fuse-exfat
    - tree
    - git
    - fontawesome-fonts
    - i3
    - compton
    - adobe-source-code-pro-fonts
    - qdirstat
    - '@virtualization'
    - steam
    - golang
    - nodejs
  - teensy_url: https://www.pjrc.com/teensy/teensy_linux64.tar.gz
  tasks:
  - name: Add third-party repositories
    dnf:
      name: "{{ item }}"
      state: present
    with_items:
    - fedora-workstation-repositories
    - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm"
    - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm"

  - name: Update packages
    dnf:
      name: '*'
      state: latest

  - name: Install packages
    dnf:
      name: "{{ item }}"
      state: present
    with_items: "{{ base_packages + development_packages }}"

  - name: Configure system to not sleep on laptop lid close when docked
    lineinfile:
      dest: /etc/systemd/logind.conf
      state: present
      regexp: '^#HandleLidSwitchDocked=ignore$'
      line: 'HandleLidSwitchDocked=ignore'

  - name: Remove default directories
    file:
      state: absent
      path: "{{ ansible_env.HOME }}/{{ item }}"
    with_items: 
    - Desktop
    - Documents
    - Downloads
    - Music
    - Pictures
    - Public
    - Templates
    - Videos

  - name: Create default directories
    file:
      state: directory
      path: "{{ ansible_env.HOME }}/{{ item }}"
    with_items:
    - downloads
    - documents

  - name: Create symlink directories
    file:
      state: directory
      path: "{{ item }}"
    with_items:
    - "{{ ansible_env.HOME }}/.config/i3"
    - "{{ ansible_env.HOME }}/.config/polybar"

  - name: Symlink dotfiles
    file:
      path: "{{ item.path }}"
      src: "{{ playbook_dir }}/{{ item.src }}"
      follow: no
      force: yes
      state: link
    with_items: "{{ dotfiles }}"
    when: install_dotfiles

  - name: Add wheel group to govern access to libvirt daemon
    blockinfile:
      create: yes
      state: present
      path: /etc/polkit-1/rules.d/49-org.libvirt.unix.manager.rules
      content: |
        polkit.addRule(function(action, subject) {
            if (action.id == "org.libvirt.unix.manage" &&
                subject.isInGroup("wheel")) {
                    return polkit.Result.YES;
            }
        });

  - name: Install teensy ergodox loader
    block:
    - name: Download files
      get_url:
        url: "{{ teensy_url }}"
        dest: "{{ ansible_env.HOME }}/downloads/teensy.tar.gz"
    when: install_teensy
